#!/usr/bin/env node
var debug = require('debug')('my-application');
var app1 = require('../app');
var mongodb = require('mongodb');
var databaseUrl = "localhost:27017/nodejs";
var db = require("mongojs")(databaseUrl);
var http = require('http');
var fs = require('fs');
var path = require('path');
var url = require('url');
var imageDir = '/Users/aadi/Downloads/la/';
var difference = require("array-difference");
var counter = 0;
var express = require('express');
var router = express.Router();
var nodeArr = '';
var allLesions = '';
var userLesions = '';
var requestedLesionNum = '';

app1.set('port', process.env.PORT || 3000);
var reviewStorage = db.collection('reviewedData');

function removeA(arr) {
    var what, a = arguments, L = a.length, ax;
    while (L > 1 && arr.length) {
        what = a[--L];
        while ((ax= arr.indexOf(what)) !== -1) {
            arr.splice(ax, 1);
        }
    }
    return arr;
}

function _getMsg(st, callback) { //return data for particular requested lesion number
    db.collection('imagereview1').find({"lesionNum": st }).toArray(function (err, docs) {
        callback(docs);
    });
}

function _allLesions(user, callback) {
    data_allLesions = db.collection('imagereview1').aggregate([{$match:{'lesionNum': {$gt: 0}}}, {$group:{_id: {}, lesions:{$push:"$lesionNum"}}}]);
    if (typeof data_allLesions != undefined) {
        data_allLesions.toArray(function(err, docs) {
            callback(docs);
        });
    } else {
        data_allLesions[0]['lesions'] = 1;
    }
}

function _userProgress(user, callback) {
    console.log('requesting user', user['responseJSON']['username']);
    username = user['responseJSON']['username'];
    //console.log('type', typeof(username));
    userLesions = reviewStorage.aggregate([{$match:{'uid': username}},{$group:{_id: username, progress:{$push:"$lesionNum"}}}]);
    if (typeof userLesions != undefined) {
        userLesions.toArray(function(err, docs) {
            callback(docs);
        });
    } else {
        userLesions[0]['progress'] = 1;
    }
}

var server = app1.listen(app1.get('port'), function() {
  debug('Express server listening on port ' + server.address().port);
});

var io = require('socket.io').listen(server); //app //app2

io.on("connection", function (socket) {

    socket.on("requestLesion", function (requestLesion) {
        //console.log('server receives: ', requestLesion);
        requestedLesionNum = requestLesion;
        _getMsg(requestedLesionNum, function (res) {
            nodeArr = res;  // just moved the nodeArr declaration to function scope
            if (typeof nodeArr[0] != "undefined") {
                nodeArr[0]['refno'] = '0';
            }
            //console.log('server sends: ', nodeArr);
            socket.emit("tweet", nodeArr[0]);
        });
    });

    socket.on("dataFromUser", function(data) {
        console.log('user sends: ', data);
        data.comment = data.comment.replace("Comment only if necessary.", "");
        reviewStorage.insert(data);
    });

    socket.on("userProgressRequest", function(user) {
        _allLesions(user, function (res) {
            if (typeof res[0] != "undefined") {
                var allLesions = res[0]['lesions'];  // just moved the nodeArr declaration to function scope
                _userProgress(user, function (res) {
                    if (typeof res[0] != "undefined") {
                        userProgress = res[0]['progress'];  // just moved the nodeArr declaration to function scope
                        unreviewed = allLesions;
                        for (i = 0; i < userProgress.length; i++){
                            unreviewed = removeA(unreviewed, userProgress[i])
                        }
                        socket.emit("userProgressReturn", unreviewed);
                    } else {
                        unreviewed = allLesions;
                    }
                });
            } else {
            }            
        });
    });
});

module.exports = io;
